syntax = "proto3";

package codepair.v1;

import "api/codepair/v1/resources.proto";

option go_package = "github.com/yorkie-team/codepair/backend-go/api/codepair/v1;v1";

//
// WorkspaceDocumentsService
//
service WorkspaceDocumentsService {
  // PUT /workspaces/{workspace_id}/documents/{document_id}
  // Possibly used for updating the title or content
  rpc UpdateDocumentTitle (UpdateDocumentTitleRequest) returns (UpdateDocumentTitleResponse);

  // GET /workspaces/{workspace_id}/documents/{document_id}
  rpc GetDocument (GetDocumentRequest) returns (GetDocumentResponse);

  // GET /workspaces/{workspace_id}/documents
  rpc GetDocuments (GetDocumentsRequest) returns (GetDocumentsResponse);

  // POST /workspaces/{workspace_id}/documents
  rpc CreateDocument (CreateWorkspaceDocumentRequest) returns (CreateWorkspaceDocumentResponse);

  // POST /workspaces/{workspace_id}/documents/{document_id}/share-token
  rpc CreateDocumentShareToken (CreateDocumentShareTokenRequest)
      returns (CreateDocumentShareTokenResponse);
}

//
// Messages
//

message UpdateDocumentTitleRequest {
  string workspaceId = 1;
  string documentId = 2;
  string title = 3;
}

message UpdateDocumentTitleResponse {
  bool success = 1;
}

// Retrieve a specific doc
message GetDocumentRequest {
  string workspaceId = 1;
  string documentId = 2;
}

message GetDocumentResponse {
  // Could return the entire DocumentDomain
  Document document = 1;
}

// Retrieve all docs
message GetDocumentsRequest {
  string workspaceId = 1;
  // Possibly pagination
}

message GetDocumentsResponse {
  repeated Document documents = 1;
}

// "CreateWorkspaceDocumentDto"
message CreateWorkspaceDocumentRequest {
  string workspaceId = 1;
  string title = 2; // required
  // If you also want initial content, add: string content = 3;
}

// "CreateWorkspaceDocumentResponse"
message CreateWorkspaceDocumentResponse {
  string id = 1;
  string yorkieDocumentId = 2;
  string title = 3;
  string content = 4;
  string createdAt = 5;
  string updatedAt = 6;
  string workspaceId = 7;
}

// "CreateWorkspaceDocumentShareTokenDto"
message CreateDocumentShareTokenRequest {
  string workspaceId = 1;
  string documentId = 2;
  DocumentShareRole role = 3;       // enum [READ, EDIT]
  string expiredAt = 4; // date-time
}

// "CreateWorkspaceDocumentShareTokenResponse"
message CreateDocumentShareTokenResponse {
  string sharingToken = 1;
}
