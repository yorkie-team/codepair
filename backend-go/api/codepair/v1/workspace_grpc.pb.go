// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: codepair/v1/workspace.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	WorkspacesService_CreateWorkspace_FullMethodName          = "/codepair.v1.WorkspacesService/CreateWorkspace"
	WorkspacesService_GetWorkspaces_FullMethodName            = "/codepair.v1.WorkspacesService/GetWorkspaces"
	WorkspacesService_GetWorkspace_FullMethodName             = "/codepair.v1.WorkspacesService/GetWorkspace"
	WorkspacesService_CreateInvitationToken_FullMethodName    = "/codepair.v1.WorkspacesService/CreateInvitationToken"
	WorkspacesService_JoinWorkspace_FullMethodName            = "/codepair.v1.WorkspacesService/JoinWorkspace"
	WorkspacesService_UpdateDocumentTitle_FullMethodName      = "/codepair.v1.WorkspacesService/UpdateDocumentTitle"
	WorkspacesService_GetDocument_FullMethodName              = "/codepair.v1.WorkspacesService/GetDocument"
	WorkspacesService_GetDocuments_FullMethodName             = "/codepair.v1.WorkspacesService/GetDocuments"
	WorkspacesService_CreateDocument_FullMethodName           = "/codepair.v1.WorkspacesService/CreateDocument"
	WorkspacesService_CreateDocumentShareToken_FullMethodName = "/codepair.v1.WorkspacesService/CreateDocumentShareToken"
	WorkspacesService_GetWorkspaceUsers_FullMethodName        = "/codepair.v1.WorkspacesService/GetWorkspaceUsers"
)

// WorkspacesServiceClient is the client API for WorkspacesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type WorkspacesServiceClient interface {
	CreateWorkspace(ctx context.Context, in *CreateWorkspaceRequest, opts ...grpc.CallOption) (*CreateWorkspaceResponse, error)
	GetWorkspaces(ctx context.Context, in *GetWorkspacesRequest, opts ...grpc.CallOption) (*GetWorkspacesResponse, error)
	GetWorkspace(ctx context.Context, in *GetWorkspaceRequest, opts ...grpc.CallOption) (*GetWorkspaceResponse, error)
	CreateInvitationToken(ctx context.Context, in *CreateInvitationTokenRequest, opts ...grpc.CallOption) (*CreateInvitationTokenResponse, error)
	JoinWorkspace(ctx context.Context, in *JoinWorkspaceRequest, opts ...grpc.CallOption) (*JoinWorkspaceResponse, error)
	// PUT /workspaces/{workspace_id}/documents/{document_id}
	UpdateDocumentTitle(ctx context.Context, in *UpdateDocumentTitleRequest, opts ...grpc.CallOption) (*UpdateDocumentTitleResponse, error)
	// GET /workspaces/{workspace_id}/documents/{document_id}
	GetDocument(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*GetDocumentResponse, error)
	// GET /workspaces/{workspace_id}/documents
	GetDocuments(ctx context.Context, in *GetDocumentsRequest, opts ...grpc.CallOption) (*GetDocumentsResponse, error)
	// POST /workspaces/{workspace_id}/documents
	CreateDocument(ctx context.Context, in *CreateDocumentRequest, opts ...grpc.CallOption) (*CreateDocumentResponse, error)
	// POST /workspaces/{workspace_id}/documents/{document_id}/share-token
	CreateDocumentShareToken(ctx context.Context, in *CreateDocumentShareTokenRequest, opts ...grpc.CallOption) (*CreateDocumentShareTokenResponse, error)
	// GET /workspaces/{workspace_id}/users
	GetWorkspaceUsers(ctx context.Context, in *GetWorkspaceUsersRequest, opts ...grpc.CallOption) (*GetWorkspaceUsersResponse, error)
}

type workspacesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWorkspacesServiceClient(cc grpc.ClientConnInterface) WorkspacesServiceClient {
	return &workspacesServiceClient{cc}
}

func (c *workspacesServiceClient) CreateWorkspace(ctx context.Context, in *CreateWorkspaceRequest, opts ...grpc.CallOption) (*CreateWorkspaceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateWorkspaceResponse)
	err := c.cc.Invoke(ctx, WorkspacesService_CreateWorkspace_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workspacesServiceClient) GetWorkspaces(ctx context.Context, in *GetWorkspacesRequest, opts ...grpc.CallOption) (*GetWorkspacesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetWorkspacesResponse)
	err := c.cc.Invoke(ctx, WorkspacesService_GetWorkspaces_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workspacesServiceClient) GetWorkspace(ctx context.Context, in *GetWorkspaceRequest, opts ...grpc.CallOption) (*GetWorkspaceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetWorkspaceResponse)
	err := c.cc.Invoke(ctx, WorkspacesService_GetWorkspace_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workspacesServiceClient) CreateInvitationToken(ctx context.Context, in *CreateInvitationTokenRequest, opts ...grpc.CallOption) (*CreateInvitationTokenResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateInvitationTokenResponse)
	err := c.cc.Invoke(ctx, WorkspacesService_CreateInvitationToken_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workspacesServiceClient) JoinWorkspace(ctx context.Context, in *JoinWorkspaceRequest, opts ...grpc.CallOption) (*JoinWorkspaceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(JoinWorkspaceResponse)
	err := c.cc.Invoke(ctx, WorkspacesService_JoinWorkspace_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workspacesServiceClient) UpdateDocumentTitle(ctx context.Context, in *UpdateDocumentTitleRequest, opts ...grpc.CallOption) (*UpdateDocumentTitleResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateDocumentTitleResponse)
	err := c.cc.Invoke(ctx, WorkspacesService_UpdateDocumentTitle_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workspacesServiceClient) GetDocument(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*GetDocumentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetDocumentResponse)
	err := c.cc.Invoke(ctx, WorkspacesService_GetDocument_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workspacesServiceClient) GetDocuments(ctx context.Context, in *GetDocumentsRequest, opts ...grpc.CallOption) (*GetDocumentsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetDocumentsResponse)
	err := c.cc.Invoke(ctx, WorkspacesService_GetDocuments_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workspacesServiceClient) CreateDocument(ctx context.Context, in *CreateDocumentRequest, opts ...grpc.CallOption) (*CreateDocumentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateDocumentResponse)
	err := c.cc.Invoke(ctx, WorkspacesService_CreateDocument_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workspacesServiceClient) CreateDocumentShareToken(ctx context.Context, in *CreateDocumentShareTokenRequest, opts ...grpc.CallOption) (*CreateDocumentShareTokenResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateDocumentShareTokenResponse)
	err := c.cc.Invoke(ctx, WorkspacesService_CreateDocumentShareToken_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workspacesServiceClient) GetWorkspaceUsers(ctx context.Context, in *GetWorkspaceUsersRequest, opts ...grpc.CallOption) (*GetWorkspaceUsersResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetWorkspaceUsersResponse)
	err := c.cc.Invoke(ctx, WorkspacesService_GetWorkspaceUsers_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkspacesServiceServer is the server API for WorkspacesService service.
// All implementations must embed UnimplementedWorkspacesServiceServer
// for forward compatibility.
type WorkspacesServiceServer interface {
	CreateWorkspace(context.Context, *CreateWorkspaceRequest) (*CreateWorkspaceResponse, error)
	GetWorkspaces(context.Context, *GetWorkspacesRequest) (*GetWorkspacesResponse, error)
	GetWorkspace(context.Context, *GetWorkspaceRequest) (*GetWorkspaceResponse, error)
	CreateInvitationToken(context.Context, *CreateInvitationTokenRequest) (*CreateInvitationTokenResponse, error)
	JoinWorkspace(context.Context, *JoinWorkspaceRequest) (*JoinWorkspaceResponse, error)
	// PUT /workspaces/{workspace_id}/documents/{document_id}
	UpdateDocumentTitle(context.Context, *UpdateDocumentTitleRequest) (*UpdateDocumentTitleResponse, error)
	// GET /workspaces/{workspace_id}/documents/{document_id}
	GetDocument(context.Context, *GetDocumentRequest) (*GetDocumentResponse, error)
	// GET /workspaces/{workspace_id}/documents
	GetDocuments(context.Context, *GetDocumentsRequest) (*GetDocumentsResponse, error)
	// POST /workspaces/{workspace_id}/documents
	CreateDocument(context.Context, *CreateDocumentRequest) (*CreateDocumentResponse, error)
	// POST /workspaces/{workspace_id}/documents/{document_id}/share-token
	CreateDocumentShareToken(context.Context, *CreateDocumentShareTokenRequest) (*CreateDocumentShareTokenResponse, error)
	// GET /workspaces/{workspace_id}/users
	GetWorkspaceUsers(context.Context, *GetWorkspaceUsersRequest) (*GetWorkspaceUsersResponse, error)
	mustEmbedUnimplementedWorkspacesServiceServer()
}

// UnimplementedWorkspacesServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedWorkspacesServiceServer struct{}

func (UnimplementedWorkspacesServiceServer) CreateWorkspace(context.Context, *CreateWorkspaceRequest) (*CreateWorkspaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWorkspace not implemented")
}
func (UnimplementedWorkspacesServiceServer) GetWorkspaces(context.Context, *GetWorkspacesRequest) (*GetWorkspacesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkspaces not implemented")
}
func (UnimplementedWorkspacesServiceServer) GetWorkspace(context.Context, *GetWorkspaceRequest) (*GetWorkspaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkspace not implemented")
}
func (UnimplementedWorkspacesServiceServer) CreateInvitationToken(context.Context, *CreateInvitationTokenRequest) (*CreateInvitationTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateInvitationToken not implemented")
}
func (UnimplementedWorkspacesServiceServer) JoinWorkspace(context.Context, *JoinWorkspaceRequest) (*JoinWorkspaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinWorkspace not implemented")
}
func (UnimplementedWorkspacesServiceServer) UpdateDocumentTitle(context.Context, *UpdateDocumentTitleRequest) (*UpdateDocumentTitleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDocumentTitle not implemented")
}
func (UnimplementedWorkspacesServiceServer) GetDocument(context.Context, *GetDocumentRequest) (*GetDocumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDocument not implemented")
}
func (UnimplementedWorkspacesServiceServer) GetDocuments(context.Context, *GetDocumentsRequest) (*GetDocumentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDocuments not implemented")
}
func (UnimplementedWorkspacesServiceServer) CreateDocument(context.Context, *CreateDocumentRequest) (*CreateDocumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDocument not implemented")
}
func (UnimplementedWorkspacesServiceServer) CreateDocumentShareToken(context.Context, *CreateDocumentShareTokenRequest) (*CreateDocumentShareTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDocumentShareToken not implemented")
}
func (UnimplementedWorkspacesServiceServer) GetWorkspaceUsers(context.Context, *GetWorkspaceUsersRequest) (*GetWorkspaceUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkspaceUsers not implemented")
}
func (UnimplementedWorkspacesServiceServer) mustEmbedUnimplementedWorkspacesServiceServer() {}
func (UnimplementedWorkspacesServiceServer) testEmbeddedByValue()                           {}

// UnsafeWorkspacesServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to WorkspacesServiceServer will
// result in compilation errors.
type UnsafeWorkspacesServiceServer interface {
	mustEmbedUnimplementedWorkspacesServiceServer()
}

func RegisterWorkspacesServiceServer(s grpc.ServiceRegistrar, srv WorkspacesServiceServer) {
	// If the following call pancis, it indicates UnimplementedWorkspacesServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&WorkspacesService_ServiceDesc, srv)
}

func _WorkspacesService_CreateWorkspace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWorkspaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspacesServiceServer).CreateWorkspace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WorkspacesService_CreateWorkspace_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspacesServiceServer).CreateWorkspace(ctx, req.(*CreateWorkspaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkspacesService_GetWorkspaces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkspacesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspacesServiceServer).GetWorkspaces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WorkspacesService_GetWorkspaces_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspacesServiceServer).GetWorkspaces(ctx, req.(*GetWorkspacesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkspacesService_GetWorkspace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkspaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspacesServiceServer).GetWorkspace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WorkspacesService_GetWorkspace_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspacesServiceServer).GetWorkspace(ctx, req.(*GetWorkspaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkspacesService_CreateInvitationToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateInvitationTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspacesServiceServer).CreateInvitationToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WorkspacesService_CreateInvitationToken_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspacesServiceServer).CreateInvitationToken(ctx, req.(*CreateInvitationTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkspacesService_JoinWorkspace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinWorkspaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspacesServiceServer).JoinWorkspace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WorkspacesService_JoinWorkspace_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspacesServiceServer).JoinWorkspace(ctx, req.(*JoinWorkspaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkspacesService_UpdateDocumentTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDocumentTitleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspacesServiceServer).UpdateDocumentTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WorkspacesService_UpdateDocumentTitle_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspacesServiceServer).UpdateDocumentTitle(ctx, req.(*UpdateDocumentTitleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkspacesService_GetDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspacesServiceServer).GetDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WorkspacesService_GetDocument_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspacesServiceServer).GetDocument(ctx, req.(*GetDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkspacesService_GetDocuments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDocumentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspacesServiceServer).GetDocuments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WorkspacesService_GetDocuments_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspacesServiceServer).GetDocuments(ctx, req.(*GetDocumentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkspacesService_CreateDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspacesServiceServer).CreateDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WorkspacesService_CreateDocument_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspacesServiceServer).CreateDocument(ctx, req.(*CreateDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkspacesService_CreateDocumentShareToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDocumentShareTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspacesServiceServer).CreateDocumentShareToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WorkspacesService_CreateDocumentShareToken_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspacesServiceServer).CreateDocumentShareToken(ctx, req.(*CreateDocumentShareTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkspacesService_GetWorkspaceUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkspaceUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspacesServiceServer).GetWorkspaceUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WorkspacesService_GetWorkspaceUsers_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspacesServiceServer).GetWorkspaceUsers(ctx, req.(*GetWorkspaceUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// WorkspacesService_ServiceDesc is the grpc.ServiceDesc for WorkspacesService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var WorkspacesService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "codepair.v1.WorkspacesService",
	HandlerType: (*WorkspacesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWorkspace",
			Handler:    _WorkspacesService_CreateWorkspace_Handler,
		},
		{
			MethodName: "GetWorkspaces",
			Handler:    _WorkspacesService_GetWorkspaces_Handler,
		},
		{
			MethodName: "GetWorkspace",
			Handler:    _WorkspacesService_GetWorkspace_Handler,
		},
		{
			MethodName: "CreateInvitationToken",
			Handler:    _WorkspacesService_CreateInvitationToken_Handler,
		},
		{
			MethodName: "JoinWorkspace",
			Handler:    _WorkspacesService_JoinWorkspace_Handler,
		},
		{
			MethodName: "UpdateDocumentTitle",
			Handler:    _WorkspacesService_UpdateDocumentTitle_Handler,
		},
		{
			MethodName: "GetDocument",
			Handler:    _WorkspacesService_GetDocument_Handler,
		},
		{
			MethodName: "GetDocuments",
			Handler:    _WorkspacesService_GetDocuments_Handler,
		},
		{
			MethodName: "CreateDocument",
			Handler:    _WorkspacesService_CreateDocument_Handler,
		},
		{
			MethodName: "CreateDocumentShareToken",
			Handler:    _WorkspacesService_CreateDocumentShareToken_Handler,
		},
		{
			MethodName: "GetWorkspaceUsers",
			Handler:    _WorkspacesService_GetWorkspaceUsers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "codepair/v1/workspace.proto",
}
