// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                  String            @id @default(auto()) @map("_id") @db.ObjectId
  socialProvider      String            @map("social_provider")
  socialUid           String            @unique @map("social_uid")
  nickname            String?
  createdAt           DateTime          @default(now()) @map("created_at")
  updatedAt           DateTime          @updatedAt @map("updated_at")
  userWorkspaceList   UserWorkspace[]
  intelligenceLogList IntelligenceLog[]

  @@map("users")
}

model UserWorkspace {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  user        User      @relation(onDelete: Cascade, fields: [userId], references: [id])
  userId      String    @map("user_id") @db.ObjectId
  role        String
  workspace   Workspace @relation(onDelete: Cascade, fields: [workspaceId], references: [id])
  workspaceId String    @map("workspace_id") @db.ObjectId
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("user_workspaces")
}

model Workspace {
  id                           String                     @id @default(auto()) @map("_id") @db.ObjectId
  title                        String
  slug                         String
  createdAt                    DateTime                   @default(now()) @map("created_at")
  updatedAt                    DateTime                   @updatedAt @map("updated_at")
  documentList                 Document[]
  userWorkspaceList            UserWorkspace[]
  workspaceInvitationTokenList WorkspaceInvitationToken[]

  @@map("workspaces")
}

model Document {
  id                       String                 @id @default(auto()) @map("_id") @db.ObjectId
  yorkieDocumentId         String                 @map("yorkie_document_id")
  title                    String
  content                  String?
  createdAt                DateTime               @default(now()) @map("created_at")
  updatedAt                DateTime               @updatedAt @map("updated_at")
  workspace                Workspace              @relation(onDelete: Cascade, fields: [workspaceId], references: [id])
  workspaceId              String                 @map("workspace_id") @db.ObjectId
  documentSharingTokenList DocumentSharingToken[]
  intelligenceLogList      IntelligenceLog[]

  @@map("documents")
}

model WorkspaceInvitationToken {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  token       String    @unique
  workspace   Workspace @relation(onDelete: Cascade, fields: [workspaceId], references: [id])
  workspaceId String    @map("workspace_id") @db.ObjectId
  expiredAt   DateTime? @map("expired_at")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("workspace_invitation_tokens")
}

model DocumentSharingToken {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  token      String    @unique
  role       String
  document   Document  @relation(onDelete: Cascade, fields: [documentId], references: [id])
  documentId String    @map("document_id") @db.ObjectId
  expiredAt  DateTime? @map("expired_at")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")

  @@map("document_sharing_tokens")
}

model IntelligenceLog {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  document   Document  @relation(onDelete: Cascade, fields: [documentId], references: [id])
  documentId String    @map("document_id") @db.ObjectId
  user       User      @relation(onDelete: Cascade, fields: [userId], references: [id])
  userId     String    @map("user_id") @db.ObjectId
  memoryKey  String
  question   String
  answer     String
  expiredAt  DateTime? @map("expired_at")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")

  @@map("intelligence_logs")
}
